{"version":3,"sources":["actions/constants.js","components/Header/index.js","actions/auth.actions.js","components/Layout/index.js","containers/Home/index.js","actions/user.actions.js","components/UI/Card/index.js","containers/Login/index.js","containers/SignUp/index.js","components/PrivateRoute.js","App.js","serviceWorker.js","reducers/auth.reducers.js","reducers/user.reducers.js","reducers/index.js","store/index.js","index.js"],"names":["authConstant","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAILURE","USER_LOGOUT","userConstant","GET_REALTIMEUSERS","GET_REALTIME_MESSAGES","Header","props","auth","useSelector","state","dispatch","useDispatch","console","log","className","style","display","authenticated","to","margin","color","fontWeight","firstName","lastName","onClick","uid","a","type","USER_LOGOUT_REQUEST","firestore","collection","doc","update","isOnline","then","signOut","localStorage","clear","catch","error","payload","Layout","children","User","user","src","alt","flex","justifyContent","Home","unsubscribe","useState","chatStarted","setChatStarted","chatUser","setChatUser","message","setMessage","userUid","setUserUid","useEffect","db","onSnapshot","querySnapshot","users","forEach","data","push","f","initChat","where","uid_1","uid_2","orderBy","conversations","user_uid_1","user_uid_2","GET_REALTIMEMESSAGES","getRealTimeConversations","length","map","key","con","textAlign","value","onChange","e","target","placeholder","msgObj","add","isView","createdAt","Date","updateMessage","Card","Login","email","setEmail","password","setPassword","onSubmit","preventDefault","signInWithEmailAndPassword","name","displayName","split","loggedInUser","setItem","JSON","stringify","alert","SignUp","setFirstName","setLastName","createUserWithEmailAndPassword","currentUser","updateProfile","set","signup","PrivateRoute","Component","component","rest","getItem","parse","App","path","exact","Boolean","window","location","hostname","match","initState","authenticating","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e6bf2896.chunk.js","sourcesContent":["export const authConstant = {\r\n  USER_LOGIN_REQUEST: \"USER_LOGIN_REQUEST\",\r\n  USER_LOGIN_SUCCESS: \"USER_LOGIN_SUCCESS\",\r\n  USER_LOGIN_FAILURE: \"USER_LOGIN_FAILURE\",\r\n  USER_LOGOUT: \"USER_LOGOUT\",\r\n};\r\n\r\nexport const userConstant = {\r\n  GET_REALTIMEUSERS: \"GET_REALTIMEUSERS\",\r\n  GET_REALTIME_MESSAGES: \"GET_REALTIMEMESSAGES\",\r\n};\r\n","import React from \"react\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nimport \"./styles.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { logout } from \"../../actions\";\r\n\r\n/**\r\n* @author Eshwar CVS\r\n* @function Header\r\n**/\r\n\r\nconst Header = (props) => {\r\n  const auth = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n  console.log(\"HOME\");\r\n  return (\r\n    <header className=\"header\">\r\n      <div style={{ display: \"flex\" }}>\r\n        <div className=\"logo\">Messenger</div>\r\n\r\n        {!auth.authenticated\r\n          ? <ul className=\"leftMenu\">\r\n            <li><NavLink to={\"/login\"}>Login</NavLink></li>\r\n            <li><NavLink to={\"/signup\"}>Sign up</NavLink></li>\r\n          </ul>\r\n          : null}\r\n      </div>\r\n      <div style={{ margin: \"20px 0\", color: \"#fff\", fontWeight: \"bold\" }}>\r\n        {auth.authenticated ? `Hi ${auth.firstName} ${auth.lastName}` : \"\"}\r\n      </div>\r\n      <ul className=\"menu\">\r\n        {auth.authenticated\r\n          ? <li>\r\n            <Link\r\n              to={\"#\"}\r\n              onClick={() => {\r\n                dispatch(logout(auth.uid));\r\n              }}\r\n            >\r\n              Logout\r\n            </Link>\r\n          </li>\r\n          : null}\r\n      </ul>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { auth, firestore } from \"firebase\";\r\nimport { authConstant } from \"./constants\";\r\n\r\nexport const signup = (user) => {\r\n  return async (dispatch) => {\r\n    const db = firestore();\r\n\r\n    dispatch({ type: `${authConstant.USER_LOGIN_REQUEST}` });\r\n\r\n    auth()\r\n      .createUserWithEmailAndPassword(user.email, user.password)\r\n      .then((data) => {\r\n        console.log(data);\r\n        const currentUser = auth().currentUser;\r\n        const name = `${user.firstName} ${user.lastName}`;\r\n        currentUser.updateProfile({\r\n          displayName: name,\r\n        })\r\n          .then(() => {\r\n            //if you are here means it is updated successfully\r\n            db.collection(\"users\")\r\n              .doc(data.user.uid)\r\n              .set({\r\n                firstName: user.firstName,\r\n                lastName: user.lastName,\r\n                uid: data.user.uid,\r\n                createdAt: new Date(),\r\n                isOnline: true,\r\n              })\r\n              .then(() => {\r\n                //succeful\r\n                const loggedInUser = {\r\n                  firstName: user.firstName,\r\n                  lastName: user.lastName,\r\n                  uid: data.user.uid,\r\n                  email: user.email,\r\n                };\r\n                localStorage.setItem(\"user\", JSON.stringify(loggedInUser));\r\n                console.log(\"User logged in successfully...!\");\r\n                dispatch({\r\n                  type: `${authConstant.USER_LOGIN_SUCCESS}`,\r\n                  payload: { user: loggedInUser },\r\n                });\r\n              })\r\n              .catch((error) => {\r\n                console.log(error);\r\n                dispatch({\r\n                  type: `${authConstant.USER_LOGIN_FAILURE}`,\r\n                  payload: { error },\r\n                });\r\n              });\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n};\r\n\r\nexport const signin = (user) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: `${authConstant.USER_LOGIN_REQUEST}` });\r\n    auth()\r\n      .signInWithEmailAndPassword(user.email, user.password)\r\n      .then((data) => {\r\n        console.log(data);\r\n\r\n        const db = firestore();\r\n        db.collection(\"users\")\r\n          .doc(data.user.uid)\r\n          .update({\r\n            isOnline: true,\r\n          })\r\n          .then(() => {\r\n            const name = data.user.displayName.split(\" \");\r\n            const firstName = name[0];\r\n            const lastName = name[1];\r\n\r\n            const loggedInUser = {\r\n              firstName,\r\n              lastName,\r\n              uid: data.user.uid,\r\n              email: data.user.email,\r\n            };\r\n\r\n            localStorage.setItem(\"user\", JSON.stringify(loggedInUser));\r\n\r\n            dispatch({\r\n              type: `${authConstant.USER_LOGIN_SUCCESS}`,\r\n              payload: { user: loggedInUser },\r\n            });\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        dispatch({\r\n          type: `${authConstant.USER_LOGIN_FAILURE}`,\r\n          payload: { error },\r\n        });\r\n      });\r\n  };\r\n};\r\n\r\nexport const isLoggedInUser = () => {\r\n  return async (dispatch) => {\r\n    const user = localStorage.getItem(\"user\")\r\n      ? JSON.parse(localStorage.getItem(\"user\"))\r\n      : null;\r\n\r\n    if (user) {\r\n      dispatch({\r\n        type: `${authConstant.USER_LOGIN_SUCCESS}`,\r\n        payload: { user },\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: `${authConstant.USER_LOGIN_FAILURE}`,\r\n        payload: { error: \"Login failed\" },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const logout = (uid) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: `${authConstant.USER_LOGOUT_REQUEST}` });\r\n    //Now lets logout user\r\n\r\n    const db = firestore();\r\n    db.collection(\"users\")\r\n      .doc(uid)\r\n      .update({\r\n        isOnline: false,\r\n      })\r\n      .then(() => {\r\n        auth()\r\n          .signOut()\r\n          .then(() => {\r\n            //successfully\r\n            localStorage.clear();\r\n            dispatch({ type: `${authConstant.USER_LOGOUT}_SUCCESS` });\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n            dispatch(\r\n              {\r\n                type: `${authConstant.USER_LOGOUT}_FAILURE`,\r\n                payload: { error },\r\n              },\r\n            );\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport Header from \"../Header\";\r\n\r\n/**\r\n* @author\r\n* @function Layout\r\n**/\r\n\r\nconst Layout = (props) => {\r\n  return (\r\n    <div>\r\n      <Header />\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./styles.css\";\r\nimport Layout from \"../../components/Layout\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getRealTimeUsers,\r\n  updateMessage,\r\n  getRealTimeConversations,\r\n} from \"../../actions\";\r\n\r\nconst User = (props) => {\r\n  const { user, onClick } = props;\r\n  return (\r\n    <div onClick={() => onClick(user)} className=\"displayName\">\r\n      <div className=\"displayPic\">\r\n        <img\r\n          src=\"https://i.pinimg.com/originals/be/ac/96/beac96b8e13d2198fd4bb1d5ef56cdcf.jpg\"\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flex: 1,\r\n          justifyContent: \"space-between\",\r\n          margin: \"0 10px\",\r\n        }}\r\n      >\r\n        <span style={{ fontWeight: 500 }}>\r\n          {user.firstName}\r\n          {user.lastName}\r\n        </span>\r\n        <span className={user.isOnline ? `onlineStatus` : `onlineStatus off`}>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Home = (props) => {\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector((state) => state.auth);\r\n  const user = useSelector((state) => state.user);\r\n  const [chatStarted, setChatStarted] = useState(false);\r\n  const [chatUser, setChatUser] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [userUid, setUserUid] = useState(null);\r\n  let unsubscribe;\r\n\r\n  useEffect(() => {\r\n    unsubscribe = dispatch(getRealTimeUsers(auth.uid))\r\n      .then((unsubscribe) => {\r\n        return unsubscribe;\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  //componentWillUnmount\r\n  useEffect(() => {\r\n    return () => {\r\n      //cleanup\r\n      unsubscribe.then((f) => f()).catch((error) => console.log(error));\r\n    };\r\n  }, []);\r\n\r\n  const initChat = (user) => {\r\n    setChatStarted(true);\r\n    setChatUser(`${user.firstName} ${user.lastName}`);\r\n    setUserUid(user.uid);\r\n    console.log(user);\r\n    dispatch(getRealTimeConversations({ uid_1: auth.uid, uid_2: user.uid }));\r\n  };\r\n\r\n  const submitMessage = (e) => {\r\n    const msgObj = {\r\n      user_uid_1: auth.uid,\r\n      user_uid_2: userUid,\r\n      message,\r\n    };\r\n    if (message !== \"\") {\r\n      dispatch(updateMessage(msgObj))\r\n        .then(() => {\r\n          setMessage(\"\");\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <section className=\"container\">\r\n        <div className=\"listOfUsers\">\r\n          {user.users.length > 0\r\n            ? user.users.map((user) => {\r\n              return (\r\n                <User\r\n                  onClick={initChat}\r\n                  key={user.uid}\r\n                  user={user}\r\n                />\r\n              );\r\n            })\r\n            : null}\r\n        </div>\r\n        <div className=\"chatArea\">\r\n          <div className=\"chatHeader\">\r\n            {chatStarted ? chatUser : \"\"}\r\n          </div>\r\n          <div className=\"messageSections\">\r\n            {chatStarted\r\n              ? user.conversations.map((con) =>\r\n                <div\r\n                  style={{\r\n                    textAlign: con.user_uid_1 === auth.uid ? \"right\" : \"left\",\r\n                  }}\r\n                >\r\n                  <p className=\"messageStyle\">{con.message}</p>\r\n                </div>\r\n              )\r\n              : null}\r\n          </div>\r\n          {chatStarted\r\n            ? <div className=\"chatControls\">\r\n              <textarea\r\n                value={message}\r\n                onChange={(e) => setMessage(e.target.value)}\r\n                placeholder=\"Write Message\"\r\n              />\r\n              <button onClick={submitMessage}>Send</button>\r\n            </div>\r\n            : null}\r\n        </div>\r\n      </section>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { userConstant } from \"./constants\";\r\nimport { firestore } from \"firebase\";\r\n\r\nexport const getRealTimeUsers = (uid) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: `${userConstant.GET_REALTIMEUSERS}_REQUEST` });\r\n    const db = firestore();\r\n    const unsubscribe = db.collection(\"users\")\r\n      .onSnapshot((querySnapshot) => {\r\n        const users = [];\r\n        querySnapshot.forEach(function (doc) {\r\n          if (doc.data().uid !== uid) {\r\n            users.push(doc.data());\r\n          }\r\n        });\r\n        dispatch({\r\n          type: `${userConstant.GET_REALTIMEUSERS}_SUCCESS`,\r\n          payload: { users },\r\n        });\r\n      });\r\n    return unsubscribe;\r\n  };\r\n};\r\n\r\nexport const updateMessage = (msgObj) => {\r\n  return async (dispatch) => {\r\n    const db = firestore();\r\n    db.collection(\"conversations\")\r\n      .add({\r\n        ...msgObj,\r\n        isView: false,\r\n        createdAt: new Date(),\r\n      })\r\n      .then((data) => {\r\n        console.log(data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n};\r\n\r\nexport const getRealTimeConversations = (user) => {\r\n  return async (dispatch) => {\r\n    const db = firestore();\r\n    db.collection(\"conversations\")\r\n      .where(\"user_uid_1\", \"in\", [user.uid_1, user.uid_2])\r\n      .orderBy(\"createdAt\", \"asc\")\r\n      .onSnapshot((querySnapshot) => {\r\n        const conversations = [];\r\n        querySnapshot.forEach((doc) => {\r\n          if (\r\n            (doc.data().user_uid_1 === user.uid_1 &&\r\n              doc.data().user_uid_2 === user.uid_2) ||\r\n            (doc.data().user_uid_1 === user.uid_2 &&\r\n              doc.data().user_uid_2 === user.uid_1)\r\n          ) {\r\n            conversations.push(doc.data());\r\n          }\r\n        });\r\n        dispatch({\r\n          type: userConstant.GET_REALTIMEMESSAGES,\r\n          payload: { conversations },\r\n        });\r\n        console.log(conversations);\r\n      });\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport \"./styles.css\";\r\n\r\n/**\r\n* @author Eshwar CVS\r\n* @function Card\r\n**/\r\n\r\nconst Card = (props) => {\r\n  return (\r\n    <div className=\"card\">\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { useState } from \"react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport Card from \"../../components/UI/Card\";\r\nimport { signin } from \"../../actions\";\r\nimport \"./styles.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n/**\r\n* @author Eshwar CVS\r\n* @function Login\r\n**/\r\n\r\nconst Login = (props) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector((state) => state.auth);\r\n  const userLogin = (e) => {\r\n    e.preventDefault();\r\n    if (email === \"\") {\r\n      alert(\"Email is required\");\r\n      return;\r\n    }\r\n    if (password === \"\") {\r\n      alert(\"Password is required\");\r\n      return;\r\n    }\r\n    dispatch(signin({ email, password }));\r\n  };\r\n\r\n  if (auth.authenticated) {\r\n    return <Redirect to={`/`} />;\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"loginContainer\">\r\n        <Card>\r\n          <form onSubmit={userLogin}>\r\n            <input\r\n              name=\"email\"\r\n              type=\"text\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              placeholder=\"Email\"\r\n            />\r\n            <input\r\n              name=\"password\"\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              placeholder=\"Password\"\r\n            />\r\n            <div>\r\n              <button>Login</button>\r\n            </div>\r\n          </form>\r\n        </Card>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport Card from \"../../components/UI/Card\";\r\nimport { signup } from \"../../actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n/**\r\n* @author Eshwar CVS\r\n* @function SignUp\r\n**/\r\n\r\nconst SignUp = (props) => {\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector((state) => state.auth);\r\n\r\n  const registerUser = (e) => {\r\n    e.preventDefault();\r\n\r\n    const user = {\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      password,\r\n    };\r\n\r\n    dispatch(signup(user));\r\n  };\r\n\r\n  if (auth.authenticated) {\r\n    return <Redirect to={`/`} />;\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"registerContainer\">\r\n        <Card>\r\n          <form onSubmit={registerUser}>\r\n            <h3>Sign up</h3>\r\n\r\n            <input\r\n              name=\"firstName\"\r\n              type=\"text\"\r\n              value={firstName}\r\n              onChange={(e) => setFirstName(e.target.value)}\r\n              placeholder=\"First Name\"\r\n            />\r\n\r\n            <input\r\n              name=\"lastName\"\r\n              type=\"text\"\r\n              value={lastName}\r\n              onChange={(e) => setLastName(e.target.value)}\r\n              placeholder=\"Last Name\"\r\n            />\r\n\r\n            <input\r\n              name=\"email\"\r\n              type=\"text\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              placeholder=\"Email\"\r\n            />\r\n\r\n            <input\r\n              name=\"password\"\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              placeholder=\"Password\"\r\n            />\r\n\r\n            <div>\r\n              <button>Sign up</button>\r\n            </div>\r\n          </form>\r\n        </Card>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\n/**\r\n* @author Eshwar CVS\r\n* @function PrivateRoute\r\n**/\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) => {\r\n        const user = localStorage.getItem(\"user\")\r\n          ? JSON.parse(localStorage.getItem(\"user\")) : null;\r\n        if (user) {\r\n          return <Component {...props} />;\r\n        } else {\r\n          return <Redirect to={`/login`} />;\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React, { useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Home from \"./containers/Home\";\r\nimport Login from \"./containers/Login\";\r\nimport SignUp from \"./containers/SignUp\";\r\nimport PrivateRoute from \"./components/PrivateRoute\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { isLoggedInUser } from \"./actions\";\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector((state) => state.auth);\r\n\r\n  useEffect(() => {\r\n    if (!auth.authenticated) {\r\n      dispatch(isLoggedInUser());\r\n    }\r\n  }, []);\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        {/* only logged in user can access this home route */}\r\n        <PrivateRoute path=\"/\" exact component={Home} />\r\n        <Route path=\"/login\" component={Login} />\r\n        <Route path=\"/signup\" component={SignUp} />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { authConstant } from \"../actions/constants\";\r\n\r\nconst initState = {\r\n  firstName: \"\",\r\n  lastName: \"\",\r\n  email: \"\",\r\n  authenticating: false,\r\n  authenticated: false,\r\n  error: null,\r\n};\r\n\r\nexport default (state = initState, action) => {\r\n  console.log(action);\r\n  switch (action.type) {\r\n    case `${authConstant.USER_LOGIN_REQUEST}`:\r\n      state = {\r\n        ...state,\r\n        authenticating: true,\r\n      };\r\n      break;\r\n    case `${authConstant.USER_LOGIN_SUCCESS}`:\r\n      state = {\r\n        ...state,\r\n        ...action.payload.user,\r\n        authenticated: true,\r\n        authenticating: false,\r\n      };\r\n      break;\r\n    case `${authConstant.USER_LOGIN_FAILURE}`:\r\n      state = {\r\n        ...state,\r\n        authenticated: false,\r\n        authenticating: false,\r\n        error: action.payload.error,\r\n      };\r\n      break;\r\n    case `${authConstant.USER_LOGOUT}_REQUEST`:\r\n      break;\r\n    case `${authConstant.USER_LOGOUT}_SUCCESS`:\r\n      state = {\r\n        ...initState,\r\n      };\r\n      break;\r\n    case `${authConstant.USER_LOGOUT}_FAILURE`:\r\n      state = {\r\n        ...state,\r\n        error: action.payload.error,\r\n      };\r\n      break;\r\n    default:\r\n      state = {\r\n        ...state,\r\n      };\r\n      break;\r\n  }\r\n  return state;\r\n};\r\n","import { userConstant } from \"../actions/constants\";\r\n\r\nconst initState = {\r\n  users: [],\r\n  conversations: [],\r\n};\r\n\r\nexport default (state = initState, action) => {\r\n  switch (action.type) {\r\n    case `${userConstant.GET_REALTIMEUSERS}_REQUEST`:\r\n      break;\r\n    case `${userConstant.GET_REALTIMEUSERS}_SUCCESS`:\r\n      state = {\r\n        ...state,\r\n        users: action.payload.users,\r\n      };\r\n      break;\r\n    case userConstant.GET_REALTIMEMESSAGES:\r\n      state = {\r\n        ...state,\r\n        conversations: action.payload.conversations,\r\n      };\r\n      break;\r\n    case `${userConstant.GET_REALTIMEMESSAGES}_FAILURE`:\r\n      state = {\r\n        ...state,\r\n        conversations: [],\r\n      };\r\n      break;\r\n    default:\r\n      state = {\r\n        ...state,\r\n      };\r\n      break;\r\n  }\r\n\r\n  return state;\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport authReducers from \"./auth.reducers\";\r\nimport userReducers from \"./user.reducers\";\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducers,\r\n  user: userReducers,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"../reducers\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport firebase from \"firebase\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store/index\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyC-5AiGELf0OwZ5you7ro17Im6YOwhzKtw\",\r\n  authDomain: \"messenger-2fd13.firebaseapp.com\",\r\n  databaseURL: \"https://messenger-2fd13.firebaseio.com\",\r\n  projectId: \"messenger-2fd13\",\r\n  storageBucket: \"messenger-2fd13.appspot.com\",\r\n  messagingSenderId: \"815285692255\",\r\n  appId: \"1:815285692255:web:0de9b66269789bceb138ea\",\r\n  measurementId: \"G-Y8RY4RNPV6\",\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nwindow.store = store;\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\"),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}